set -g @plugin 'tmux-plugins/tpm'

# Set the default terminal terminfo, enable true color support. This makes p10k play nice.
set -g default-terminal "xterm-256color"
set -g detach-on-destroy off

# mouse
set -g mouse on
unbind -n MouseDown3Pane # disable the right click menu

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# split panes using | and -
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind "%"

# switch panes using Shift-arrow without prefix
bind-key -n S-Left select-pane -L
bind-key -n S-Right select-pane -R
bind-key -n S-Up select-pane -U
bind-key -n S-Down select-pane -D

# switch windows using Alt-arrow without prefix
bind-key -n M-Left previous-window
bind-key -n M-Right next-window

# switch sessions using Alt-arrow without prefix
bind-key -n M-Up switch-client -l
bind-key -n M-Down switch-client -n

# join pane to window with prefix + j
bind-key j command-prompt -p "Send pane to:" "join-pane -t '%%'"

# double click / triple click copies to clipboard
bind -T copy-mode	DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-and-cancel "xsel -ib"
bind -T copy-mode-vi	DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-and-cancel "xsel -ib"
bind -n DoubleClick1Pane select-pane \; copy-mode -M \; send -X select-word \; send -X copy-pipe-and-cancel "xsel -ib"
bind -T copy-mode	TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-and-cancel "xsel -ib"
bind -T copy-mode-vi	TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-and-cancel "xsel -ib"
bind -n TripleClick1Pane select-pane \; copy-mode -M \; send -X select-line \; send -X copy-pipe-and-cancel "xsel -ib"
bind -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$(xsel -ob)\"; tmux paste-buffer -b primary_selection; tmux delete-buffer -b primary_selection"
bind -T copy-mode	MouseDragEnd1Pane send -X copy-pipe-no-clear 'xsel -ib'
bind -T copy-mode-vi	MouseDragEnd1Pane send -X copy-pipe-no-clear 'xsel -ib'
bind -T copy-mode	y send -X copy-pipe 'xsel -ib' 
bind -T copy-mode-vi	y send -X copy-pipe 'xsel -ib' 

# Ctrl + a + n : New session
unbind n
unbind C-n
bind-key n command-prompt -Fp 'Session Name:' "run-shell -bC 'new-session -e \"target\"=\"%1\" -s \"%1\""
bind-key C-n command-prompt -Fp 'Session Name:' "run-shell -bC 'new-session -e \"target\"=\"%1\" -s \"%1\""

# Ctrl + a + $ : Rename session
unbind '$'
#unbind 'C-$'
bind-key '$' command-prompt -Fp 'Update Session Name:' "run-shell -bC 'setenv target \"%1\";rename-session \"%1\"'"

# pane navigation
bind-key > swap-pane -D       # swap current pane with the next one
bind-key < swap-pane -U       # swap current pane with the previous one

set -s escape-time 10       # faster command sequences
set -sg repeat-time 1000    # increase repeat timeout
set -s focus-events on

set -g history-limit 10000000

set -g base-index 1             # start windows numbering at 1
setw -g pane-base-index 1       # make pane numbering consistent with windows

#setw automatic-rename on    # rename window to reflect current program
set -g renumber-windows off      # renumber windows when a window is closed

set -g set-titles on            # set terminal title

set -g status-interval 1     # redraw status line every 1 seconds

# activity
set -g monitor-activity on
set -g visual-activity off

# theme
set -g @plugin 'o0th/tmux-nova'
set -g @nova-segment-mode "#{?client_prefix,+,-}"
set -g @nova-segment-mode-colors "#50fa7b #282a36"
set -g @nova-segment-session '#(tmux display-message -p '#S' | sed 's/_/./g')'
set -g @nova-segment-session-colors "#7a2230 #f8f8f2"
set -g @nova-segment-whoami "#(whoami)"
set -g @nova-segment-whoami-colors "#50fa7b #282a36"
set -g @nova-pane "#I#{?pane_in_mode, ï‘  #{pane_mode},} > #W"
set -g @nova-rows 0
set -g @nova-segments-0-left "mode"
set -g @nova-segments-0-right "session"

set -g pane-border-status top
set -g pane-border-format '#(pane="$(tmux display-message -p "#{session_name}_#{window_index}_#{pane_index}")"; if tmux show-options -gq "@$pane" | grep -q "logging$"; then echo "#[fg=green][logging]"; else echo "#[fg=red][not logging]"; fi) #[fg=gray][#T]'

set -g display-panes-time 2000  # slightly longer pane indicators display time
set -g display-time 1000        # slightly longer status messages display time
set display-time 1000        # slightly longer status messages display time

# reload tmux config with ctrl + a + r
 unbind r
 bind r \
     source-file ~/.tmux.conf \;\
         display 'Reloaded tmux config.'

# find session
bind-key C-f command-prompt -p find-session 'switch-client -t %%'

set-window-option -g mode-keys vi

#####################################
# tmux-resurrect - save and reload sessions and windows after a restart
# Default keybinds : save - command + c + s && restore command + c + r
######################################
set -g @plugin 'tmux-plugins/tmux-resurrect'
# keep vim sessions after reboot
set -g @resurrect-strategy-vim 'session'
# keep pane contents
set -g @resurrect-capture-pane-contents 'on'
# restore bash history
set -g @resurrect-save-bash-history 'off'

#####################################
# tmux-logging
#####################################
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @logging-path '~/logs/%Y-%m-%d'
set -g @logging-filename 'tmux-#{session_name}-#{window_index}-#{pane_index}_%Y-%m-%d-%H%Mhr.log'
set -g @autolog 0
bind a set @autolog 1\; display-message "autolog is #{?@autolog,enabled,disabled} for this session"
bind A set @autolog 0\; display-message "autolog is #{?@autolog,enabled,disabled} for this session"

######################################
# tmux-continuum - automatically save and restore tmux sessions
# place last in the TPM plugins list
#####################################
set -g @plugin 'tmux-plugins/tmux-continuum'
# Restore last saved enviroment
#set -g @continuum-restore 'on'
# Set autosave interval
set -g @continuum-save-interval '5'
# Show continiuum state in statusbar
#set -g status-right 'Continuum status: #{continuum_status}'

# initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
